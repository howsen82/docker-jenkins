version: '3.9'

services:
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:latest
    restart: always
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    depends_on:
      - sonarqube
  # Install JDK, Sonarqube Scanner, Maven, OWASP Dependency Check
  # Eclipse Temurin Installer
  # Manage Jenkins -> Tools -> Install JDK and Maven3, Clcik on Apply and Save
    
  # admin/admin for initial logon
  sonarqube:
    container_name: sonarqube
    image: sonarqube:community
    hostname: sonarqube
    depends_on:
      - db
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - 9001:9000
  
  db:
    container_name: postgresql
    hostname: postgresql
    image: postgres:latest
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  
  trivy:
    container_name: trivy
    image: bitnami/trivy:latest

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:


# sudo docker-compose up -d

# Check for password
# sudo docker-compose logs --follow
# Reference: https://medium.com/cloud-native-daily/10-stages-real-world-ci-cd-devsecops-pipeline-for-deployment-of-petclinic-application-f95431bf940